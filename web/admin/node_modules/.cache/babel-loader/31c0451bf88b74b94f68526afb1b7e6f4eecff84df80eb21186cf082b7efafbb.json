{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { provide, defineComponent, unref, inject, watch, shallowRef } from 'vue';\nimport CacheEntity from './Cache';\nimport { arrayType, booleanType, objectType, someType, stringType, withInstall } from '../type';\nexport const ATTR_TOKEN = 'data-token-hash';\nexport const ATTR_MARK = 'data-css-hash';\nexport const ATTR_CACHE_PATH = 'data-cache-path';\n// Mark css-in-js instance in style element\nexport const CSS_IN_JS_INSTANCE = '__cssinjs_instance__';\nexport function createCache() {\n  const cssinjsInstanceId = Math.random().toString(12).slice(2);\n  // Tricky SSR: Move all inline style to the head.\n  // PS: We do not recommend tricky mode.\n  if (typeof document !== 'undefined' && document.head && document.body) {\n    const styles = document.body.querySelectorAll(`style[${ATTR_MARK}]`) || [];\n    const {\n      firstChild\n    } = document.head;\n    Array.from(styles).forEach(style => {\n      style[CSS_IN_JS_INSTANCE] = style[CSS_IN_JS_INSTANCE] || cssinjsInstanceId;\n      // Not force move if no head\n      // Not force move if no head\n      if (style[CSS_IN_JS_INSTANCE] === cssinjsInstanceId) {\n        document.head.insertBefore(style, firstChild);\n      }\n    });\n    // Deduplicate of moved styles\n    const styleHash = {};\n    Array.from(document.querySelectorAll(`style[${ATTR_MARK}]`)).forEach(style => {\n      var _a;\n      const hash = style.getAttribute(ATTR_MARK);\n      if (styleHash[hash]) {\n        if (style[CSS_IN_JS_INSTANCE] === cssinjsInstanceId) {\n          (_a = style.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(style);\n        }\n      } else {\n        styleHash[hash] = true;\n      }\n    });\n  }\n  return new CacheEntity(cssinjsInstanceId);\n}\nconst StyleContextKey = Symbol('StyleContextKey');\nconst defaultStyleContext = {\n  cache: createCache(),\n  defaultCache: true,\n  hashPriority: 'low'\n};\n// fix: https://github.com/vueComponent/ant-design-vue/issues/6912\nexport const useStyleInject = () => {\n  return inject(StyleContextKey, shallowRef(_extends(_extends({}, defaultStyleContext), {\n    cache: createCache()\n  })));\n};\nexport const useStyleProvider = props => {\n  const parentContext = useStyleInject();\n  const context = shallowRef(_extends(_extends({}, defaultStyleContext), {\n    cache: createCache()\n  }));\n  watch([() => unref(props), parentContext], () => {\n    const mergedContext = _extends({}, parentContext.value);\n    const propsValue = unref(props);\n    Object.keys(propsValue).forEach(key => {\n      const value = propsValue[key];\n      if (propsValue[key] !== undefined) {\n        mergedContext[key] = value;\n      }\n    });\n    const {\n      cache\n    } = propsValue;\n    mergedContext.cache = mergedContext.cache || createCache();\n    mergedContext.defaultCache = !cache && parentContext.value.defaultCache;\n    context.value = mergedContext;\n  }, {\n    immediate: true\n  });\n  provide(StyleContextKey, context);\n  return context;\n};\nexport const styleProviderProps = () => ({\n  autoClear: booleanType(),\n  /** @private Test only. Not work in production. */\n  mock: stringType(),\n  /**\n   * Only set when you need ssr to extract style on you own.\n   * If not provided, it will auto create <style /> on the end of Provider in server side.\n   */\n  cache: objectType(),\n  /** Tell children that this context is default generated context */\n  defaultCache: booleanType(),\n  /** Use `:where` selector to reduce hashId css selector priority */\n  hashPriority: stringType(),\n  /** Tell cssinjs where to inject style in */\n  container: someType(),\n  /** Component wil render inline  `<style />` for fallback in SSR. Not recommend. */\n  ssrInline: booleanType(),\n  /** Transform css before inject in document. Please note that `transformers` do not support dynamic update */\n  transformers: arrayType(),\n  /**\n   * Linters to lint css before inject in document.\n   * Styles will be linted after transforming.\n   * Please note that `linters` do not support dynamic update.\n   */\n  linters: arrayType()\n});\nexport const StyleProvider = withInstall(defineComponent({\n  name: 'AStyleProvider',\n  inheritAttrs: false,\n  props: styleProviderProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useStyleProvider(props);\n    return () => {\n      var _a;\n      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);\n    };\n  }\n}));\nexport default {\n  useStyleInject,\n  useStyleProvider,\n  StyleProvider\n};","map":{"version":3,"names":["_extends","provide","defineComponent","unref","inject","watch","shallowRef","CacheEntity","arrayType","booleanType","objectType","someType","stringType","withInstall","ATTR_TOKEN","ATTR_MARK","ATTR_CACHE_PATH","CSS_IN_JS_INSTANCE","createCache","cssinjsInstanceId","Math","random","toString","slice","document","head","body","styles","querySelectorAll","firstChild","Array","from","forEach","style","insertBefore","styleHash","_a","hash","getAttribute","parentNode","removeChild","StyleContextKey","Symbol","defaultStyleContext","cache","defaultCache","hashPriority","useStyleInject","useStyleProvider","props","parentContext","context","mergedContext","value","propsValue","Object","keys","key","undefined","immediate","styleProviderProps","autoClear","mock","container","ssrInline","transformers","linters","StyleProvider","name","inheritAttrs","setup","_ref","slots","default","call"],"sources":["C:/Users/lenovo/Desktop/glang-gin-vue3/ginBlog/web/admin/node_modules/ant-design-vue/es/_util/cssinjs/StyleContext.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { provide, defineComponent, unref, inject, watch, shallowRef } from 'vue';\nimport CacheEntity from './Cache';\nimport { arrayType, booleanType, objectType, someType, stringType, withInstall } from '../type';\nexport const ATTR_TOKEN = 'data-token-hash';\nexport const ATTR_MARK = 'data-css-hash';\nexport const ATTR_CACHE_PATH = 'data-cache-path';\n// Mark css-in-js instance in style element\nexport const CSS_IN_JS_INSTANCE = '__cssinjs_instance__';\nexport function createCache() {\n  const cssinjsInstanceId = Math.random().toString(12).slice(2);\n  // Tricky SSR: Move all inline style to the head.\n  // PS: We do not recommend tricky mode.\n  if (typeof document !== 'undefined' && document.head && document.body) {\n    const styles = document.body.querySelectorAll(`style[${ATTR_MARK}]`) || [];\n    const {\n      firstChild\n    } = document.head;\n    Array.from(styles).forEach(style => {\n      style[CSS_IN_JS_INSTANCE] = style[CSS_IN_JS_INSTANCE] || cssinjsInstanceId;\n      // Not force move if no head\n      // Not force move if no head\n      if (style[CSS_IN_JS_INSTANCE] === cssinjsInstanceId) {\n        document.head.insertBefore(style, firstChild);\n      }\n    });\n    // Deduplicate of moved styles\n    const styleHash = {};\n    Array.from(document.querySelectorAll(`style[${ATTR_MARK}]`)).forEach(style => {\n      var _a;\n      const hash = style.getAttribute(ATTR_MARK);\n      if (styleHash[hash]) {\n        if (style[CSS_IN_JS_INSTANCE] === cssinjsInstanceId) {\n          (_a = style.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(style);\n        }\n      } else {\n        styleHash[hash] = true;\n      }\n    });\n  }\n  return new CacheEntity(cssinjsInstanceId);\n}\nconst StyleContextKey = Symbol('StyleContextKey');\nconst defaultStyleContext = {\n  cache: createCache(),\n  defaultCache: true,\n  hashPriority: 'low'\n};\n// fix: https://github.com/vueComponent/ant-design-vue/issues/6912\nexport const useStyleInject = () => {\n  return inject(StyleContextKey, shallowRef(_extends(_extends({}, defaultStyleContext), {\n    cache: createCache()\n  })));\n};\nexport const useStyleProvider = props => {\n  const parentContext = useStyleInject();\n  const context = shallowRef(_extends(_extends({}, defaultStyleContext), {\n    cache: createCache()\n  }));\n  watch([() => unref(props), parentContext], () => {\n    const mergedContext = _extends({}, parentContext.value);\n    const propsValue = unref(props);\n    Object.keys(propsValue).forEach(key => {\n      const value = propsValue[key];\n      if (propsValue[key] !== undefined) {\n        mergedContext[key] = value;\n      }\n    });\n    const {\n      cache\n    } = propsValue;\n    mergedContext.cache = mergedContext.cache || createCache();\n    mergedContext.defaultCache = !cache && parentContext.value.defaultCache;\n    context.value = mergedContext;\n  }, {\n    immediate: true\n  });\n  provide(StyleContextKey, context);\n  return context;\n};\nexport const styleProviderProps = () => ({\n  autoClear: booleanType(),\n  /** @private Test only. Not work in production. */\n  mock: stringType(),\n  /**\n   * Only set when you need ssr to extract style on you own.\n   * If not provided, it will auto create <style /> on the end of Provider in server side.\n   */\n  cache: objectType(),\n  /** Tell children that this context is default generated context */\n  defaultCache: booleanType(),\n  /** Use `:where` selector to reduce hashId css selector priority */\n  hashPriority: stringType(),\n  /** Tell cssinjs where to inject style in */\n  container: someType(),\n  /** Component wil render inline  `<style />` for fallback in SSR. Not recommend. */\n  ssrInline: booleanType(),\n  /** Transform css before inject in document. Please note that `transformers` do not support dynamic update */\n  transformers: arrayType(),\n  /**\n   * Linters to lint css before inject in document.\n   * Styles will be linted after transforming.\n   * Please note that `linters` do not support dynamic update.\n   */\n  linters: arrayType()\n});\nexport const StyleProvider = withInstall(defineComponent({\n  name: 'AStyleProvider',\n  inheritAttrs: false,\n  props: styleProviderProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    useStyleProvider(props);\n    return () => {\n      var _a;\n      return (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots);\n    };\n  }\n}));\nexport default {\n  useStyleInject,\n  useStyleProvider,\n  StyleProvider\n};"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,SAASC,OAAO,EAAEC,eAAe,EAAEC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,UAAU,QAAQ,KAAK;AAChF,OAAOC,WAAW,MAAM,SAAS;AACjC,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,QAAQ,SAAS;AAC/F,OAAO,MAAMC,UAAU,GAAG,iBAAiB;AAC3C,OAAO,MAAMC,SAAS,GAAG,eAAe;AACxC,OAAO,MAAMC,eAAe,GAAG,iBAAiB;AAChD;AACA,OAAO,MAAMC,kBAAkB,GAAG,sBAAsB;AACxD,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,MAAMC,iBAAiB,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,KAAK,CAAC,CAAC,CAAC;EAC7D;EACA;EACA,IAAI,OAAOC,QAAQ,KAAK,WAAW,IAAIA,QAAQ,CAACC,IAAI,IAAID,QAAQ,CAACE,IAAI,EAAE;IACrE,MAAMC,MAAM,GAAGH,QAAQ,CAACE,IAAI,CAACE,gBAAgB,CAAE,SAAQb,SAAU,GAAE,CAAC,IAAI,EAAE;IAC1E,MAAM;MACJc;IACF,CAAC,GAAGL,QAAQ,CAACC,IAAI;IACjBK,KAAK,CAACC,IAAI,CAACJ,MAAM,CAAC,CAACK,OAAO,CAACC,KAAK,IAAI;MAClCA,KAAK,CAAChB,kBAAkB,CAAC,GAAGgB,KAAK,CAAChB,kBAAkB,CAAC,IAAIE,iBAAiB;MAC1E;MACA;MACA,IAAIc,KAAK,CAAChB,kBAAkB,CAAC,KAAKE,iBAAiB,EAAE;QACnDK,QAAQ,CAACC,IAAI,CAACS,YAAY,CAACD,KAAK,EAAEJ,UAAU,CAAC;MAC/C;IACF,CAAC,CAAC;IACF;IACA,MAAMM,SAAS,GAAG,CAAC,CAAC;IACpBL,KAAK,CAACC,IAAI,CAACP,QAAQ,CAACI,gBAAgB,CAAE,SAAQb,SAAU,GAAE,CAAC,CAAC,CAACiB,OAAO,CAACC,KAAK,IAAI;MAC5E,IAAIG,EAAE;MACN,MAAMC,IAAI,GAAGJ,KAAK,CAACK,YAAY,CAACvB,SAAS,CAAC;MAC1C,IAAIoB,SAAS,CAACE,IAAI,CAAC,EAAE;QACnB,IAAIJ,KAAK,CAAChB,kBAAkB,CAAC,KAAKE,iBAAiB,EAAE;UACnD,CAACiB,EAAE,GAAGH,KAAK,CAACM,UAAU,MAAM,IAAI,IAAIH,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACI,WAAW,CAACP,KAAK,CAAC;QACpF;MACF,CAAC,MAAM;QACLE,SAAS,CAACE,IAAI,CAAC,GAAG,IAAI;MACxB;IACF,CAAC,CAAC;EACJ;EACA,OAAO,IAAI9B,WAAW,CAACY,iBAAiB,CAAC;AAC3C;AACA,MAAMsB,eAAe,GAAGC,MAAM,CAAC,iBAAiB,CAAC;AACjD,MAAMC,mBAAmB,GAAG;EAC1BC,KAAK,EAAE1B,WAAW,CAAC,CAAC;EACpB2B,YAAY,EAAE,IAAI;EAClBC,YAAY,EAAE;AAChB,CAAC;AACD;AACA,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAO3C,MAAM,CAACqC,eAAe,EAAEnC,UAAU,CAACN,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE2C,mBAAmB,CAAC,EAAE;IACpFC,KAAK,EAAE1B,WAAW,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC;AACN,CAAC;AACD,OAAO,MAAM8B,gBAAgB,GAAGC,KAAK,IAAI;EACvC,MAAMC,aAAa,GAAGH,cAAc,CAAC,CAAC;EACtC,MAAMI,OAAO,GAAG7C,UAAU,CAACN,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE2C,mBAAmB,CAAC,EAAE;IACrEC,KAAK,EAAE1B,WAAW,CAAC;EACrB,CAAC,CAAC,CAAC;EACHb,KAAK,CAAC,CAAC,MAAMF,KAAK,CAAC8C,KAAK,CAAC,EAAEC,aAAa,CAAC,EAAE,MAAM;IAC/C,MAAME,aAAa,GAAGpD,QAAQ,CAAC,CAAC,CAAC,EAAEkD,aAAa,CAACG,KAAK,CAAC;IACvD,MAAMC,UAAU,GAAGnD,KAAK,CAAC8C,KAAK,CAAC;IAC/BM,MAAM,CAACC,IAAI,CAACF,UAAU,CAAC,CAACtB,OAAO,CAACyB,GAAG,IAAI;MACrC,MAAMJ,KAAK,GAAGC,UAAU,CAACG,GAAG,CAAC;MAC7B,IAAIH,UAAU,CAACG,GAAG,CAAC,KAAKC,SAAS,EAAE;QACjCN,aAAa,CAACK,GAAG,CAAC,GAAGJ,KAAK;MAC5B;IACF,CAAC,CAAC;IACF,MAAM;MACJT;IACF,CAAC,GAAGU,UAAU;IACdF,aAAa,CAACR,KAAK,GAAGQ,aAAa,CAACR,KAAK,IAAI1B,WAAW,CAAC,CAAC;IAC1DkC,aAAa,CAACP,YAAY,GAAG,CAACD,KAAK,IAAIM,aAAa,CAACG,KAAK,CAACR,YAAY;IACvEM,OAAO,CAACE,KAAK,GAAGD,aAAa;EAC/B,CAAC,EAAE;IACDO,SAAS,EAAE;EACb,CAAC,CAAC;EACF1D,OAAO,CAACwC,eAAe,EAAEU,OAAO,CAAC;EACjC,OAAOA,OAAO;AAChB,CAAC;AACD,OAAO,MAAMS,kBAAkB,GAAGA,CAAA,MAAO;EACvCC,SAAS,EAAEpD,WAAW,CAAC,CAAC;EACxB;EACAqD,IAAI,EAAElD,UAAU,CAAC,CAAC;EAClB;AACF;AACA;AACA;EACEgC,KAAK,EAAElC,UAAU,CAAC,CAAC;EACnB;EACAmC,YAAY,EAAEpC,WAAW,CAAC,CAAC;EAC3B;EACAqC,YAAY,EAAElC,UAAU,CAAC,CAAC;EAC1B;EACAmD,SAAS,EAAEpD,QAAQ,CAAC,CAAC;EACrB;EACAqD,SAAS,EAAEvD,WAAW,CAAC,CAAC;EACxB;EACAwD,YAAY,EAAEzD,SAAS,CAAC,CAAC;EACzB;AACF;AACA;AACA;AACA;EACE0D,OAAO,EAAE1D,SAAS,CAAC;AACrB,CAAC,CAAC;AACF,OAAO,MAAM2D,aAAa,GAAGtD,WAAW,CAACX,eAAe,CAAC;EACvDkE,IAAI,EAAE,gBAAgB;EACtBC,YAAY,EAAE,KAAK;EACnBpB,KAAK,EAAEW,kBAAkB,CAAC,CAAC;EAC3BU,KAAKA,CAACrB,KAAK,EAAEsB,IAAI,EAAE;IACjB,IAAI;MACFC;IACF,CAAC,GAAGD,IAAI;IACRvB,gBAAgB,CAACC,KAAK,CAAC;IACvB,OAAO,MAAM;MACX,IAAIb,EAAE;MACN,OAAO,CAACA,EAAE,GAAGoC,KAAK,CAACC,OAAO,MAAM,IAAI,IAAIrC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACsC,IAAI,CAACF,KAAK,CAAC;IACjF,CAAC;EACH;AACF,CAAC,CAAC,CAAC;AACH,eAAe;EACbzB,cAAc;EACdC,gBAAgB;EAChBmB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}