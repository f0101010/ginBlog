{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport hash from '@emotion/hash';\nimport { ATTR_TOKEN, CSS_IN_JS_INSTANCE, useStyleInject } from '../StyleContext';\nimport useGlobalCache from './useGlobalCache';\nimport { flattenToken, token2key } from '../util';\nimport { ref, computed } from 'vue';\nconst EMPTY_OVERRIDE = {};\n// Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\nconst hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nconst tokenKeys = new Map();\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\nfunction removeStyleTags(key, instanceId) {\n  if (typeof document !== 'undefined') {\n    const styles = document.querySelectorAll(`style[${ATTR_TOKEN}=\"${key}\"]`);\n    styles.forEach(style => {\n      var _a;\n      if (style[CSS_IN_JS_INSTANCE] === instanceId) {\n        (_a = style.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(style);\n      }\n    });\n  }\n}\nconst TOKEN_THRESHOLD = 0;\n// Remove will check current keys first\nfunction cleanTokenStyle(tokenKey, instanceId) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  const tokenKeyList = Array.from(tokenKeys.keys());\n  const cleanableKeyList = tokenKeyList.filter(key => {\n    const count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n  // Should keep tokens under threshold for not to insert style too often\n  if (tokenKeyList.length - cleanableKeyList.length > TOKEN_THRESHOLD) {\n    cleanableKeyList.forEach(key => {\n      removeStyleTags(key, instanceId);\n      tokenKeys.delete(key);\n    });\n  }\n}\nexport const getComputedToken = (originToken, overrideToken, theme, format) => {\n  const derivativeToken = theme.getDerivativeToken(originToken);\n  // Merge with override\n  let mergedDerivativeToken = _extends(_extends({}, derivativeToken), overrideToken);\n  // Format if needed\n  if (format) {\n    mergedDerivativeToken = format(mergedDerivativeToken);\n  }\n  return mergedDerivativeToken;\n};\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\nexport default function useCacheToken(theme, tokens) {\n  let option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ref({});\n  const style = useStyleInject();\n  // Basic - We do basic cache here\n  const mergedToken = computed(() => _extends({}, ...tokens.value));\n  const tokenStr = computed(() => flattenToken(mergedToken.value));\n  const overrideTokenStr = computed(() => flattenToken(option.value.override || EMPTY_OVERRIDE));\n  const cachedToken = useGlobalCache('token', computed(() => [option.value.salt || '', theme.value.id, tokenStr.value, overrideTokenStr.value]), () => {\n    const {\n      salt = '',\n      override = EMPTY_OVERRIDE,\n      formatToken,\n      getComputedToken: compute\n    } = option.value;\n    const mergedDerivativeToken = compute ? compute(mergedToken.value, override, theme.value) : getComputedToken(mergedToken.value, override, theme.value, formatToken);\n    // Optimize for `useStyleRegister` performance\n    const tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    const hashId = `${hashPrefix}-${hash(tokenKey)}`;\n    mergedDerivativeToken._hashId = hashId; // Not used\n    return [mergedDerivativeToken, hashId];\n  }, cache => {\n    var _a;\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey, (_a = style.value) === null || _a === void 0 ? void 0 : _a.cache.instanceId);\n  });\n  return cachedToken;\n}","map":{"version":3,"names":["_extends","hash","ATTR_TOKEN","CSS_IN_JS_INSTANCE","useStyleInject","useGlobalCache","flattenToken","token2key","ref","computed","EMPTY_OVERRIDE","hashPrefix","process","env","NODE_ENV","tokenKeys","Map","recordCleanToken","tokenKey","set","get","removeStyleTags","key","instanceId","document","styles","querySelectorAll","forEach","style","_a","parentNode","removeChild","TOKEN_THRESHOLD","cleanTokenStyle","tokenKeyList","Array","from","keys","cleanableKeyList","filter","count","length","delete","getComputedToken","originToken","overrideToken","theme","format","derivativeToken","getDerivativeToken","mergedDerivativeToken","useCacheToken","tokens","option","arguments","undefined","mergedToken","value","tokenStr","overrideTokenStr","override","cachedToken","salt","id","formatToken","compute","_tokenKey","hashId","_hashId","cache"],"sources":["C:/Users/lenovo/Desktop/glang-gin-vue3/ginBlog/web/admin/node_modules/ant-design-vue/es/_util/cssinjs/hooks/useCacheToken.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport hash from '@emotion/hash';\nimport { ATTR_TOKEN, CSS_IN_JS_INSTANCE, useStyleInject } from '../StyleContext';\nimport useGlobalCache from './useGlobalCache';\nimport { flattenToken, token2key } from '../util';\nimport { ref, computed } from 'vue';\nconst EMPTY_OVERRIDE = {};\n// Generate different prefix to make user selector break in production env.\n// This helps developer not to do style override directly on the hash id.\nconst hashPrefix = process.env.NODE_ENV !== 'production' ? 'css-dev-only-do-not-override' : 'css';\nconst tokenKeys = new Map();\nfunction recordCleanToken(tokenKey) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) + 1);\n}\nfunction removeStyleTags(key, instanceId) {\n  if (typeof document !== 'undefined') {\n    const styles = document.querySelectorAll(`style[${ATTR_TOKEN}=\"${key}\"]`);\n    styles.forEach(style => {\n      var _a;\n      if (style[CSS_IN_JS_INSTANCE] === instanceId) {\n        (_a = style.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(style);\n      }\n    });\n  }\n}\nconst TOKEN_THRESHOLD = 0;\n// Remove will check current keys first\nfunction cleanTokenStyle(tokenKey, instanceId) {\n  tokenKeys.set(tokenKey, (tokenKeys.get(tokenKey) || 0) - 1);\n  const tokenKeyList = Array.from(tokenKeys.keys());\n  const cleanableKeyList = tokenKeyList.filter(key => {\n    const count = tokenKeys.get(key) || 0;\n    return count <= 0;\n  });\n  // Should keep tokens under threshold for not to insert style too often\n  if (tokenKeyList.length - cleanableKeyList.length > TOKEN_THRESHOLD) {\n    cleanableKeyList.forEach(key => {\n      removeStyleTags(key, instanceId);\n      tokenKeys.delete(key);\n    });\n  }\n}\nexport const getComputedToken = (originToken, overrideToken, theme, format) => {\n  const derivativeToken = theme.getDerivativeToken(originToken);\n  // Merge with override\n  let mergedDerivativeToken = _extends(_extends({}, derivativeToken), overrideToken);\n  // Format if needed\n  if (format) {\n    mergedDerivativeToken = format(mergedDerivativeToken);\n  }\n  return mergedDerivativeToken;\n};\n/**\n * Cache theme derivative token as global shared one\n * @param theme Theme entity\n * @param tokens List of tokens, used for cache. Please do not dynamic generate object directly\n * @param option Additional config\n * @returns Call Theme.getDerivativeToken(tokenObject) to get token\n */\nexport default function useCacheToken(theme, tokens) {\n  let option = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ref({});\n  const style = useStyleInject();\n  // Basic - We do basic cache here\n  const mergedToken = computed(() => _extends({}, ...tokens.value));\n  const tokenStr = computed(() => flattenToken(mergedToken.value));\n  const overrideTokenStr = computed(() => flattenToken(option.value.override || EMPTY_OVERRIDE));\n  const cachedToken = useGlobalCache('token', computed(() => [option.value.salt || '', theme.value.id, tokenStr.value, overrideTokenStr.value]), () => {\n    const {\n      salt = '',\n      override = EMPTY_OVERRIDE,\n      formatToken,\n      getComputedToken: compute\n    } = option.value;\n    const mergedDerivativeToken = compute ? compute(mergedToken.value, override, theme.value) : getComputedToken(mergedToken.value, override, theme.value, formatToken);\n    // Optimize for `useStyleRegister` performance\n    const tokenKey = token2key(mergedDerivativeToken, salt);\n    mergedDerivativeToken._tokenKey = tokenKey;\n    recordCleanToken(tokenKey);\n    const hashId = `${hashPrefix}-${hash(tokenKey)}`;\n    mergedDerivativeToken._hashId = hashId; // Not used\n    return [mergedDerivativeToken, hashId];\n  }, cache => {\n    var _a;\n    // Remove token will remove all related style\n    cleanTokenStyle(cache[0]._tokenKey, (_a = style.value) === null || _a === void 0 ? void 0 : _a.cache.instanceId);\n  });\n  return cachedToken;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}