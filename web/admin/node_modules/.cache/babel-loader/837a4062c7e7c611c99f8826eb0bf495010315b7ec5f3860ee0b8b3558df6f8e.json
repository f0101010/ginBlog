{"ast":null,"code":"import canUseDom from '../../../../_util/canUseDom';\nimport { ATTR_MARK } from '../../StyleContext';\nexport const ATTR_CACHE_MAP = 'data-ant-cssinjs-cache-path';\n/**\n * This marks style from the css file.\n * Which means not exist in `<style />` tag.\n */\nexport const CSS_FILE_STYLE = '_FILE_STYLE__';\nexport function serialize(cachePathMap) {\n  return Object.keys(cachePathMap).map(path => {\n    const hash = cachePathMap[path];\n    return `${path}:${hash}`;\n  }).join(';');\n}\nlet cachePathMap;\nlet fromCSSFile = true;\n/**\n * @private Test usage only. Can save remove if no need.\n */\nexport function reset(mockCache) {\n  let fromFile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  cachePathMap = mockCache;\n  fromCSSFile = fromFile;\n}\nexport function prepare() {\n  var _a;\n  if (!cachePathMap) {\n    cachePathMap = {};\n    if (canUseDom()) {\n      const div = document.createElement('div');\n      div.className = ATTR_CACHE_MAP;\n      div.style.position = 'fixed';\n      div.style.visibility = 'hidden';\n      div.style.top = '-9999px';\n      document.body.appendChild(div);\n      let content = getComputedStyle(div).content || '';\n      content = content.replace(/^\"/, '').replace(/\"$/, '');\n      // Fill data\n      content.split(';').forEach(item => {\n        const [path, hash] = item.split(':');\n        cachePathMap[path] = hash;\n      });\n      // Remove inline record style\n      const inlineMapStyle = document.querySelector(`style[${ATTR_CACHE_MAP}]`);\n      if (inlineMapStyle) {\n        fromCSSFile = false;\n        (_a = inlineMapStyle.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(inlineMapStyle);\n      }\n      document.body.removeChild(div);\n    }\n  }\n}\nexport function existPath(path) {\n  prepare();\n  return !!cachePathMap[path];\n}\nexport function getStyleAndHash(path) {\n  const hash = cachePathMap[path];\n  let styleStr = null;\n  if (hash && canUseDom()) {\n    if (fromCSSFile) {\n      styleStr = CSS_FILE_STYLE;\n    } else {\n      const style = document.querySelector(`style[${ATTR_MARK}=\"${cachePathMap[path]}\"]`);\n      if (style) {\n        styleStr = style.innerHTML;\n      } else {\n        // Clean up since not exist anymore\n        delete cachePathMap[path];\n      }\n    }\n  }\n  return [styleStr, hash];\n}","map":{"version":3,"names":["canUseDom","ATTR_MARK","ATTR_CACHE_MAP","CSS_FILE_STYLE","serialize","cachePathMap","Object","keys","map","path","hash","join","fromCSSFile","reset","mockCache","fromFile","arguments","length","undefined","prepare","_a","div","document","createElement","className","style","position","visibility","top","body","appendChild","content","getComputedStyle","replace","split","forEach","item","inlineMapStyle","querySelector","parentNode","removeChild","existPath","getStyleAndHash","styleStr","innerHTML"],"sources":["C:/Users/lenovo/Desktop/glang-gin-vue3/ginBlog/web/admin/node_modules/ant-design-vue/es/_util/cssinjs/hooks/useStyleRegister/cacheMapUtil.js"],"sourcesContent":["import canUseDom from '../../../../_util/canUseDom';\nimport { ATTR_MARK } from '../../StyleContext';\nexport const ATTR_CACHE_MAP = 'data-ant-cssinjs-cache-path';\n/**\n * This marks style from the css file.\n * Which means not exist in `<style />` tag.\n */\nexport const CSS_FILE_STYLE = '_FILE_STYLE__';\nexport function serialize(cachePathMap) {\n  return Object.keys(cachePathMap).map(path => {\n    const hash = cachePathMap[path];\n    return `${path}:${hash}`;\n  }).join(';');\n}\nlet cachePathMap;\nlet fromCSSFile = true;\n/**\n * @private Test usage only. Can save remove if no need.\n */\nexport function reset(mockCache) {\n  let fromFile = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  cachePathMap = mockCache;\n  fromCSSFile = fromFile;\n}\nexport function prepare() {\n  var _a;\n  if (!cachePathMap) {\n    cachePathMap = {};\n    if (canUseDom()) {\n      const div = document.createElement('div');\n      div.className = ATTR_CACHE_MAP;\n      div.style.position = 'fixed';\n      div.style.visibility = 'hidden';\n      div.style.top = '-9999px';\n      document.body.appendChild(div);\n      let content = getComputedStyle(div).content || '';\n      content = content.replace(/^\"/, '').replace(/\"$/, '');\n      // Fill data\n      content.split(';').forEach(item => {\n        const [path, hash] = item.split(':');\n        cachePathMap[path] = hash;\n      });\n      // Remove inline record style\n      const inlineMapStyle = document.querySelector(`style[${ATTR_CACHE_MAP}]`);\n      if (inlineMapStyle) {\n        fromCSSFile = false;\n        (_a = inlineMapStyle.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(inlineMapStyle);\n      }\n      document.body.removeChild(div);\n    }\n  }\n}\nexport function existPath(path) {\n  prepare();\n  return !!cachePathMap[path];\n}\nexport function getStyleAndHash(path) {\n  const hash = cachePathMap[path];\n  let styleStr = null;\n  if (hash && canUseDom()) {\n    if (fromCSSFile) {\n      styleStr = CSS_FILE_STYLE;\n    } else {\n      const style = document.querySelector(`style[${ATTR_MARK}=\"${cachePathMap[path]}\"]`);\n      if (style) {\n        styleStr = style.innerHTML;\n      } else {\n        // Clean up since not exist anymore\n        delete cachePathMap[path];\n      }\n    }\n  }\n  return [styleStr, hash];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}